import { useMemo, useState } from 'react'
import reactLogo from './assets/react.svg'
import viteLogo from '/vite.svg'
import './App.css'
import Qr from "./assets/2c80641c2ca5bfb1ea3318e3624ce944.png"
function App() {

const [headerDetails,setHeaderDetails] =useState({
  "Adress":"Alared District, Abu Bakr Alsedeeq Road, Riyadh 13335,Building 7144",
  "Contact":"+966 000000",
  "Email":"GmZSf@example.com",
  "Vat No": "300815305200003"
})
const [bodyDetails,setBodyDetails] = useState({
  "Adress":"Alared District, Abu Bakr Alsedeeq Road, Riyadh 13335,Building 7144",
  "Contact":"+966 000000",
  "Email":"GmZSf@example.com",
})
const tableHeaders = useMemo(()=>{
  return [
    {
      label:"Service Name",
      value:"Service Name"
    },
    {
      label:"Description",
      value:"Description"
    },

    {
      label:"Employee Qty",
    value:"Employee Qty"
    },
    {
      label:"Unit Price",
    value:"Unit Price"
    },
    {
      label:"Amount",
      value:"Amount"
    }
  ]

},[])
const tableData = useMemo(() => {
  return [
    {
      "Service Name": "Web Development",
      "Description": "Building a responsive website",
      "Employee Qty": 3,
      "Unit Price": 5000,
      "Amount": 15000,
    },
    {
      "Service Name": "Graphic Design",
      "Description": "Logo and branding materials",
      "Employee Qty": 2,
      "Unit Price": 3000,
      "Amount": 6000,
    },
    {
      "Service Name": "SEO Optimization",
      "Description": "Improving website ranking",
      "Employee Qty": 1,
      "Unit Price": 4000,
      "Amount": 4000,
    },
    {
      "Service Name": "Content Writing",
      "Description": "Creating blog posts and articles",
      "Employee Qty": 2,
      "Unit Price": 2000,
      "Amount": 4000,
    },
    {
      "Service Name": "Digital Marketing",
      "Description": "Running ad campaigns",
      "Employee Qty": 4,
      "Unit Price": 7000,
      "Amount": 28000,
    }
  ];
}, []);
const [invoiceDeatils,setInvoiceDeatils] = useState({
  "Sub total":"SAR 400",
  "VAT (15%)":"SAR 40",
  "Paid :":"SAR 0",
  

})

return (<>
<div className='mx-5'>
<div className='font-bold text-[64px] text-center'>Tax Invoice</div>
<div className='flex justify-between'><svg width="187" height="89" viewBox="0 0 187 89" fill="none" xmlns="http://www.w3.org/2000/svg">
<path d="M5.90517 66.0951C7.10713 66.0951 8.08372 67.0761 8.07299 68.286C8.07299 71.447 8.07299 74.5971 8.09445 77.7581C8.09445 78.096 8.33055 78.6519 8.57738 78.7391C13.6964 80.5703 21.9063 81.5295 27.2829 80.2978C33.3463 78.9026 37.242 74.8042 39.7747 69.2234C39.7747 69.2234 42.844 62.9668 41.8674 53.1895C41.8674 53.1895 38.3366 64.7871 24.2136 64.362C14.7804 63.3156 8.30909 56.95 3.99491 48.4262C0.839762 42.1913 0.0134171 35.5205 0.539275 28.6099C1.11879 21.0126 3.68369 14.1129 9.23202 8.3904C13.7716 3.71429 20.0282 1.12009 26.4995 0.912985C33.1746 0.694984 39.6459 1.69779 45.8811 4.16119C46.8469 4.54269 47.2011 5.03319 47.1903 6.12319C47.126 11.922 47.1582 17.7317 47.1582 23.5305L43.0586 23.6177C41.2664 23.6504 39.7961 22.2007 39.7961 20.3804C39.7961 17.3938 39.7961 14.4072 39.8283 11.4206C39.8283 11.2462 39.721 11.0936 39.56 11.0391C34.3981 9.2951 29.118 8.216 23.7414 9.415C17.1628 10.8865 13.0525 15.3773 10.6593 21.5467C10.6593 21.5467 7.61152 26.6043 9.45739 37.6243C9.45739 37.6243 15.0165 23.6177 31.5541 27.8142C39.6781 30.5065 45.1835 36.1636 48.0382 44.2188C52.0196 55.4676 51.5582 66.5747 45.1513 76.8534C40.1932 84.8213 32.7454 88.7344 23.4409 88.8761C17.0018 88.9851 7.79396 87.9605 1.78416 85.508C0.979278 85.181 0.668053 84.7777 0.678785 83.8621C0.721712 77.9543 0.700249 72.0465 0.700249 66.1278L5.8837 66.0951H5.90517ZM36.3405 45.5813C36.3405 39.717 31.6615 34.9537 25.877 34.9537C20.0926 34.9537 15.4135 39.7061 15.4135 45.5813C15.4135 51.4564 20.0926 56.2088 25.877 56.2088C31.6615 56.2088 36.3405 51.4564 36.3405 45.5813Z" fill="#047A85"/>
<path d="M3.87704 63.5662C2.92191 63.5662 2.15996 63.2501 1.53752 62.5852C0.904341 61.9094 0.603848 61.1028 0.603848 60.1109C0.603848 59.119 0.904341 58.3887 1.53752 57.7347C2.14923 57.0916 2.92191 56.7755 3.88778 56.7755C4.85364 56.7755 5.65852 57.0916 6.31316 57.7565C6.9678 58.3996 7.27902 59.1735 7.27902 60.1109C7.27902 61.0483 6.95707 61.8985 6.30243 62.5634C5.64779 63.2283 4.85364 63.5553 3.88778 63.5553L3.87704 63.5662Z" fill="#BE9941"/>
<path d="M81.2314 8.28181C80.2977 8.28181 79.5572 7.9657 78.9455 7.3335C78.3338 6.6795 78.0333 5.88381 78.0333 4.91371C78.0333 3.9436 78.3231 3.2351 78.9348 2.6029C79.5358 1.9816 80.287 1.6655 81.2207 1.6655C82.1543 1.6655 82.9485 1.9816 83.5924 2.6138C84.2256 3.246 84.5368 3.9981 84.5368 4.91371C84.5368 5.82931 84.2256 6.65771 83.5817 7.31171C82.9378 7.96571 82.1651 8.28181 81.2207 8.28181H81.2314Z" fill="#BE9941"/>
<path d="M81.0599 43.4888C78.8599 43.4888 76.735 43.1618 74.7282 42.5078C72.7642 41.8647 71.0257 40.851 69.5447 39.4885C68.0637 38.1259 66.8832 36.3384 66.014 34.1693C65.1447 31.9675 64.6939 29.2751 64.6939 26.1686C64.6939 24.272 64.812 22.7024 65.0481 21.5143C65.2735 20.3916 65.5954 19.5087 66.014 18.8765C66.3896 18.3206 66.8403 17.9391 67.3876 17.732C68.0101 17.4922 68.7506 17.3614 69.5769 17.3614C70.5106 17.3614 71.3262 17.5358 71.9701 17.8846C72.335 18.0699 72.6033 18.2225 72.8072 18.3424C72.4316 20.021 72.1955 21.4816 72.0881 22.6588C71.9701 24.0213 71.9057 25.0786 71.9057 25.8089C71.9057 29.5912 72.7428 32.447 74.4062 34.3109C76.0911 36.2075 78.4092 37.1668 81.2853 37.1668C84.3438 37.1668 86.7692 36.2402 88.5185 34.3981C90.2463 32.5669 91.1263 29.6566 91.1263 25.7435V7.94381C91.1263 6.66851 91.4161 5.78561 91.9741 5.33871C92.618 4.8373 93.5732 4.5757 94.7859 4.5757C95.7517 4.5757 96.5888 4.6956 97.2864 4.9245C97.6298 5.0444 97.9196 5.1425 98.1557 5.2297V26.3866C98.1557 29.7547 97.6298 32.567 96.6103 34.747C95.58 36.9161 94.2493 38.6601 92.6502 39.9354C91.0297 41.2107 89.1946 42.1263 87.1985 42.6604C85.138 43.2054 83.0775 43.4888 81.0492 43.4888H81.0599Z" fill="#047A85"/>
<path d="M118.782 44.0888C118.084 44.0888 117.365 44.0343 116.614 43.9471C115.852 43.849 115.101 43.7291 114.371 43.5765C113.663 43.4239 112.987 43.2495 112.364 43.0424C112.128 42.9661 111.903 42.8789 111.688 42.7917L113.266 37.6578C113.749 37.8213 114.285 37.963 114.886 38.0938C116.013 38.3445 117.129 38.4753 118.213 38.4753C120.445 38.4753 122.227 37.8213 123.483 36.546C124.717 35.2925 125.446 33.3632 125.672 30.8235L125.779 29.6027H119.158C117.043 29.6027 115.122 29.2975 113.448 28.6871C111.796 28.0876 110.379 27.2374 109.241 26.1474C108.104 25.0574 107.213 23.7385 106.601 22.2234C105.979 20.6865 105.668 18.9752 105.668 17.1222C105.668 15.1602 106.022 13.3617 106.709 11.7485C107.406 10.1353 108.361 8.75096 109.542 7.62826C110.733 6.49466 112.15 5.60086 113.77 4.99046C115.401 4.36916 117.183 4.05305 119.061 4.05305C121.272 4.05305 123.418 4.46725 125.436 5.27385C127.389 6.05865 128.977 7.27946 130.158 8.91446C130.963 10.0481 131.606 11.5087 132.079 13.22C132.551 14.964 132.798 17.1767 132.798 19.7818V23.575H164.285L162.954 21.7656C162.46 21.1007 162.085 20.2723 161.827 19.3131C161.559 18.3103 161.43 17.2094 161.43 16.054C161.43 14.2228 161.795 12.566 162.503 11.1163C163.222 9.64476 164.22 8.38036 165.476 7.34486C166.742 6.29845 168.223 5.48096 169.897 4.91416C171.582 4.34736 173.396 4.05305 175.285 4.05305C177.034 4.05305 178.665 4.28195 180.136 4.75066C181.552 5.18666 182.625 5.75345 183.302 6.40745C183.645 6.72355 183.902 7.05056 184.074 7.38846C184.224 7.67186 184.3 8.06426 184.3 8.54386C184.3 8.97986 184.214 9.38316 184.042 9.77556C183.849 10.2225 183.623 10.604 183.344 10.9419C183.055 11.2907 182.754 11.6177 182.454 11.9011C182.411 11.9447 182.368 11.9774 182.325 12.0101C181.702 11.5087 180.951 11.0618 180.103 10.6585C178.869 10.0808 177.442 9.78646 175.854 9.78646C174.877 9.78646 173.954 9.93906 173.085 10.2334C172.194 10.5277 171.389 10.9964 170.702 11.5959C169.994 12.2172 169.436 12.9911 169.05 13.8849C168.653 14.7787 168.459 15.8142 168.459 16.9478C168.459 17.6454 168.577 18.3757 168.803 19.1387C169.039 19.9235 169.436 20.6647 169.973 21.3187C170.52 21.9727 171.239 22.5177 172.087 22.9319C172.956 23.357 173.986 23.575 175.156 23.575H186.392V29.6027H132.723L132.615 30.6164C132.143 35.1944 130.705 38.6279 128.344 40.8079C125.983 42.9879 122.774 44.0888 118.814 44.0888H118.782ZM118.9 9.84096C117.043 9.84096 115.498 10.4623 114.318 11.6831C113.137 12.893 112.547 14.6806 112.547 16.9914C112.547 18.9752 113.212 20.5884 114.511 21.7874C115.788 22.9646 117.365 23.5532 119.19 23.5532H125.833V19.0515C125.833 17.0023 125.597 15.4 125.114 14.1683C124.62 12.9039 124.019 11.9774 123.268 11.3125C122.517 10.6585 121.701 10.2225 120.832 10.0481C120.059 9.89546 119.415 9.81916 118.889 9.81916L118.9 9.84096Z" fill="#047A85"/>
<path d="M92.2852 88.8223C91.974 87.983 91.6413 87.0674 91.2871 86.0864C90.8364 84.8329 90.2783 83.3614 89.6237 81.661L89.3769 81.0288H72.9465L72.6997 81.6719C72.1416 83.1543 71.6479 84.5168 71.2187 85.7376C70.8645 86.7513 70.4889 87.7759 70.1026 88.8114H63.2449C63.8567 87.1764 64.5757 85.3452 65.3698 83.3178C66.4001 80.7127 67.5162 77.9332 68.7074 75.012C69.8987 72.0908 71.1436 69.1042 72.4314 66.0522C73.7299 63.0002 74.9963 60.0572 76.2304 57.2123C76.7992 55.8934 77.486 54.9887 78.2587 54.4982C79.0421 54.0077 80.1368 53.7461 81.4997 53.7461C81.9934 53.7461 82.5085 53.8115 83.0022 53.9314C83.5066 54.0622 83.968 54.2039 84.3758 54.3783C84.7729 54.5527 85.0949 54.7053 85.331 54.8579C85.449 54.9342 85.5563 54.9996 85.6422 55.0541C86.1251 55.9043 86.7476 57.2014 87.5095 58.8909C88.3573 60.7766 89.2803 62.9021 90.2783 65.2674C91.2764 67.6327 92.3174 70.1179 93.3798 72.7121C94.453 75.3063 95.4403 77.7588 96.3525 80.0914C97.2647 82.424 98.0696 84.495 98.7564 86.2935C99.1321 87.2854 99.454 88.1138 99.7008 88.8005H92.2744L92.2852 88.8223ZM80.33 61.9538C80.1153 62.4552 79.8363 63.1528 79.4929 64.0575L75.2968 75.0883H87.1768C87.1768 75.0883 85.932 71.7202 85.4812 70.543C85.4812 70.543 83.3885 64.9949 83.0236 64.0575C82.648 63.1092 82.3583 62.4007 82.1436 61.932L81.21 59.8828L80.33 61.9538Z" fill="#047A85"/>
<path d="M130.995 88.822C130.737 88.1244 130.447 87.2305 130.125 86.1405C129.675 84.6581 129.213 83.0231 128.73 81.2246L127.249 75.6765C126.756 73.7908 126.337 72.0686 125.994 70.5099L124.073 70.4663L122.699 75.6765C122.195 77.5622 121.69 79.4043 121.175 81.2137C120.66 83.0122 120.177 84.6581 119.726 86.1514C119.394 87.2414 119.104 88.1353 118.857 88.8329H111.012C110.604 87.8627 110.164 86.7618 109.703 85.5301C109.134 84.0259 108.544 82.4345 107.943 80.7777C107.342 79.1209 106.741 77.4423 106.161 75.7637C106.161 75.7637 103.532 68.1773 103.135 67.011C102.738 65.8447 102.448 64.9291 102.233 64.2642L101.085 60.58C100.731 59.4464 100.57 58.4654 100.57 57.5171C100.57 56.5688 100.817 55.9366 101.31 55.4679C101.826 54.9883 102.652 54.7376 103.768 54.7376C104.755 54.7376 105.582 54.8466 106.215 55.0755C106.58 55.2063 106.859 55.3044 107.063 55.3916C107.395 56.7432 107.825 58.3564 108.361 60.2203C108.951 62.3022 109.585 64.4495 110.261 66.684C110.937 68.9185 111.613 71.1094 112.289 73.2458C112.965 75.3931 113.566 77.2461 114.081 78.783L115.09 81.7805L115.97 78.7394C116.453 77.0499 116.947 75.2623 117.451 73.3766C117.955 71.4909 118.438 69.6161 118.911 67.7631L121.422 57.7569C121.658 56.8086 122.044 56.0347 122.581 55.457C123.032 54.9774 123.933 54.7158 125.178 54.7158C126.058 54.7158 126.874 54.8575 127.603 55.13C128.043 55.2935 128.376 55.4243 128.623 55.5224C128.88 56.7105 129.224 58.2038 129.632 59.9696C130.104 61.997 130.608 64.1225 131.166 66.357L132.798 72.9624C133.334 75.1533 133.828 77.0499 134.279 78.674L135.159 81.8132L136.178 78.7176C136.736 77.0281 137.294 75.2405 137.874 73.3548C138.442 71.4691 138.99 69.6052 139.516 67.7522C140.031 65.9101 140.514 64.1443 140.964 62.4766C141.415 60.798 141.801 59.3483 142.113 58.1166C142.435 56.8195 142.896 55.9148 143.476 55.4352C144.034 54.9556 144.978 54.7158 146.287 54.7158C146.867 54.7158 147.436 54.7812 147.951 54.9011C148.487 55.0319 148.97 55.1736 149.367 55.348C149.711 55.5006 150.011 55.6423 150.247 55.7731C148.949 60.5037 147.318 65.7139 145.397 71.2729C143.443 76.9409 141.243 82.8378 138.872 88.811H130.995V88.822Z" fill="#047A85"/>
<path d="M179.76 88.822C179.46 88.3315 179.073 87.6992 178.59 86.9253C177.936 85.868 177.174 84.669 176.305 83.3283L170.627 74.5429C169.672 73.0605 168.76 71.6762 167.902 70.3682C167.032 69.0602 166.292 67.9593 165.669 67.0437L163.866 64.395V88.822H157.299V58.291C157.299 57.528 157.406 56.9176 157.621 56.4598C157.824 56.0129 158.082 55.6859 158.404 55.4461C158.747 55.1954 159.134 55.0101 159.584 54.9011C160.067 54.7812 160.572 54.7158 161.087 54.7158C162.149 54.7158 162.986 54.8575 163.577 55.13C164.5 55.5551 164.714 55.7186 164.746 55.7513C164.843 55.8603 165.197 56.329 165.755 57.1029C166.356 57.9422 167.075 58.9668 167.923 60.1876C168.771 61.4084 169.672 62.7709 170.66 64.2533L176.122 72.57C176.916 73.769 177.528 74.7282 177.968 75.4694L179.803 78.4669V57.6152C179.803 55.9802 180.415 55.5551 180.619 55.4243C181.273 54.9665 182.186 54.7267 183.323 54.7267C184.214 54.7267 184.997 54.8357 185.673 55.0537C185.952 55.1409 186.189 55.2172 186.382 55.2826V88.8329H179.782L179.76 88.822Z" fill="#047A85"/>
</svg>
<img className='max-w-[145px] aspect-square' src={Qr}/>
</div>
<div className='mb-[100px]'>
  <h2 className='text-[20px] font-semibold'>AWN</h2>
  {
    Object.keys(headerDetails).map(key=>(
<div className='flex gap-2'>
      <span className='font-bold'>{key}:</span>
      <span>{headerDetails[key]}</span>
      </div>
    ))
  }
</div>
<div className='mb-[100px] bg-[#F9FAFB] p-[25px] rounded-[12px]'>
  <h2 className='text-[#047A85] font-bold text-[40px]'>Bill to :</h2>
  <h2 className='text-[30px] font-semibold'>Dezen Tech</h2>
  {
    Object.keys(bodyDetails).map(key=>(
<div className='flex gap-2'>
      <span className='font-bold'>{key}:</span>
      <span>{bodyDetails[key]}</span>
      </div>
    ))
  }
</div>
<div >
<table className='w-full overflow-x-hidden border border-[#475467]'>
  <thead className='bg-[#047A85] text-[#ffffff] h-[50px]'>
    {
      tableHeaders.map((header)=><th className='text-start px-[20px]'>{header.label}</th>)
    }
  </thead>
  <tbody className=''>
    
    {
          tableData?.map((item)=>(<tr className='h-[50px] hover:bg-[#F9FAFB]'>
{
  tableHeaders.map((header)=><td className='px-[20px]'>{item[header.value]}</td>)
}
          </tr>))
    }
  </tbody>
</table>
</div>
<div className='float-right min-w-[400px] mt-[100px]'>
<div className='flex flex-col gap-3'>
{
  Object.keys(invoiceDeatils).map(key=>(
    <div className='flex justify-between'>
      <span className='text-[20px] font-semibold'>
{key}

      </span>
      <span className='text-[20px] font-semibold'>
{
  invoiceDeatils[key]
}
      </span>
      </div>
  ))

}
</div>
<div className='border-solid border-0 border-b border-[#010212] w-full my-[20px]'></div>
<div className='flex justify-between font-bold text-[24px]'>
  <span className='mb-3'>
  Balance
  </span>
  <span>
  SAR 440
  </span>
</div>
<div className='text-[#475467] font-bold text-[14px]'>
Invoice total in words
</div>
<div className='text-[20px] font-bold'>
Four Hundred forty SAR
  </div>
</div>
</div>
</>)
}
export default App
